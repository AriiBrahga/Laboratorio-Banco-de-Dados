--
-- -- Sequências
--

-- EXEMPLO (01):
CREATE SEQUENCE seq_teste;


-- EXEMPLO (02):
CREATE SEQUENCE seq_teste_2
START WITH 10 INCREMENT BY 5
MINVALUE 10 MAXVALUE 20
CYCLE CACHE 2 ORDER;


-- EXEMPLO (03):
CREATE SEQUENCE seq_teste_3
START WITH 10 INCREMENT BY -1
MINVALUE 1 MAXVALUE 10
CYCLE CACHE 5;


-- EXEMPLO (04):
SELECT * 
FROM user_sequences
ORDER BY sequence_name;


-- EXEMPLO (05):
SELECT seq_teste.nextval
FROM dual;


-- EXEMPLO (06):
SELECT seq_teste.currval
FROM dual;


-- EXEMPLO (07, 08):
SELECT seq_teste_2.nextval
FROM dual;


-- EXEMPLO (09):
SELECT seq_teste_3.nextval
FROM dual;

-- EXEMPLO (10):

CREATE TABLE tb_status_encomenda_2(
id_status           INTEGER CONSTRAINT pk_status_enc_2 PRIMARY KEY,
status              VARCHAR2(10),
ultima_modificacao  DATE DEFAULT SYSDATE
);

CREATE SEQUENCE seq_status_enc_2 NOCACHE;

INSERT INTO tb_status_encomenda_2(id_status,
                                  status,
                                  ultima_modificacao)
VALUES
(seq_status_enc_2.nextval, 'Enviado', '01-JAN-2013');

INSERT INTO tb_status_encomenda_2(id_status,
                                  status,
                                  ultima_modificacao)
VALUES
(seq_status_enc_2.nextval, 'Pendente', '01-MAR-2013');


select *
from tb_status_encomenda_2;

-- EXEMPLO (11): -- CUIDADO

ALTER SEQUENCE seq_teste
INCREMENT BY 2;

-- EXEMPLO (12):

DROP SEQUENCE seq_teste_3;


--
-- INDICES
--


-- EXEMPLO (01):

SELECT *
FROM tb_cliente
WHERE sobrenome = 'Brown';

CREATE INDEX idx_clientes_sobrenome
ON tb_cliente(sobrenome);

-- EXEMPLO (02):


CREATE INDEX idx_clientes_telefone
ON tb_cliente(telefone);

-- EXEMPLO (03):


CREATE INDEX idx_func_nome_sobre
ON tb_funcionarios(nome,sobrenome);


-- EXEMPLO (04):

SELECT nome, sobrenome
FROM tb_cliente
WHERE UPPER(sobrenome) = 'BROWN';

CREATE INDEX idx_funcao_clientes_sobrenome
ON tb_cliente(UPPER(sobrenome));

-- EXEMPLO (05):

ALTER SYSTEM SET QUERY_REWRITE_ENABLED = TRUE;

-- EXEMPLO (06):

SELECT index_name, table_name, uniqueness, status
FROM user_indexes
WHERE table_name IN ('TB_CLIENTE', 'TB_FUNCIONARIOS')
ORDER BY index_name;

-- EXEMPLO (07):

SELECT index_name, table_name, column_name
FROM user_ind_columns
WHERE table_name IN ('TB_CLIENTE', 'TB_FUNCIONARIOS')
ORDER BY index_name;

-- EXEMPLO (08):

ALTER INDEX idx_clientes_telefone
RENAME TO id_clientes_telefone_nr;

-- EXEMPLO (09):

DROP INDEX id_clientes_telefone_nr;

-- EXEMPLO (10):

CREATE BITMAP INDEX idx_status_enc
ON tb_status_encomenda(status);


--
-- -- Visões
--

-- AS visões não armazenam tuplas/linhas


-- EXEMPLO (01):

GRANT CREATE VIEW TO loja;

-- EXEMPLO (02):

CREATE VIEW view_produtos_baratos AS
  SELECT *
  FROM tb_produtos
  WHERE preco < 15.00;
  
-- EXEMPLO (03):

CREATE VIEW view_funcionarios AS
  SELECT id_funcionario, id_gerente,
          nome, sobrenome, cargo, fg_ativo
  FROM tb_funcionarios;
  

-- EXEMPLO (04):

SELECT * 
FROM view_produtos_baratos;

-- EXEMPLO (05):

SELECT * 
FROM view_funcionarios;

-- EXEMPLO (06):

INSERT INTO view_produtos_baratos(id_produto, id_tipo_produto, nm_produto, preco, fg_ativo)
VALUES
(33, 1, 'DVD-R', 13.50, 1);

SELECT id_produto, nm_produto, preco
FROM view_produtos_baratos
WHERE id_produto = 33;


-- EXEMPLO (07):

INSERT INTO view_produtos_baratos(id_produto, id_tipo_produto, nm_produto, preco, fg_ativo)
VALUES
(43, 1, 'Mouse Optico', 16.50, 1);

SELECT id_produto, nm_produto, preco
FROM view_produtos_baratos
WHERE id_produto = 43;

-- EXEMPLO (08):

INSERT INTO view_funcionarios(id_funcionario, id_gerente, nome, sobrenome, cargo)
VALUES
(100, 1, 'Jefferson', 'Mendes', 'DBA');

SELECT id_funcionario, nome, sobrenome, salario
FROM tb_funcionarios
WHERE id_funcionario = 100;

-- EXEMPLO (09):

CREATE VIEW view_produtos_baratos_2 AS
  SELECT *
  FROM tb_produtos
  WHERE preco < 15.00
WITH CHECK OPTION CONSTRAINT view_produtos_baratos_2_preco;

-- EXEMPLO (10):

INSERT INTO view_produtos_baratos_2(id_produto, id_tipo_produto, nm_produto, preco)
VALUES (53, 1, 'Submarino', 19.50);

-- EXEMPLO (11):

CREATE VIEW view_produtos_baratos_3 AS
  SELECT *
  FROM tb_produtos
  WHERE preco < 15.00
WITH READ ONLY CONSTRAINT view_prod_baratos_3_read_only;

-- EXEMPLO (12):

INSERT INTO view_produtos_baratos_3(id_produto, id_tipo_produto, nm_produto, preco)
VALUES (34, 1, 'E-Book Ms Project', 19.50);

-- EXEMPLO (13):

DESCRIBE view_produtos_baratos_3;


-- EXEMPLO (14):

SELECT view_name, text_length, text
FROM user_views
ORDER BY view_name;

-- EXEMPLO (15):

SELECT constraint_name, constraint_type, status, deferrable, deferred
FROM user_constraints
WHERE table_name IN ('VIEW_PRODUTOS_BARATOS_2', 'VIEW_PRODUTOS_BARATOS_3')
ORDER BY constraint_name;

-- EXEMPLO (16):

CREATE VIEW view_tipos_e_produtos AS
  SELECT p.id_produto, p.nm_produto nome_produto,
         tp.nm_tipo_produto nome_tipo_produto, p.preco
  FROM tb_produtos p
  FULL OUTER JOIN tb_tipos_produtos tp
  USING(id_tipo_produto)
  ORDER BY p.id_produto;
  
-- EXEMPLO (17):

SELECT *
FROM view_tipos_e_produtos;


-- EXEMPLO (18):

CREATE VIEW view_salarios_funcionarios AS
  SELECT f.nome, f.sobrenome, f.cargo, f.salario, gs.id_salario
  FROM tb_funcionarios f
  INNER JOIN tb_grades_salarios gs
    ON f.salario BETWEEN gs.base_salario AND gs.teto_salario
  ORDER BY gs.id_salario;
  
-- EXEMPLO (19):

CREATE VIEW view_media_produtos AS
  SELECT id_tipo_produto, AVG(preco) media_preco
  FROM tb_produtos
  WHERE preco < 15.00
  GROUP BY id_tipo_produto
  HAVING AVG(preco) > 13.00
  ORDER BY id_tipo_produto;
  
-- EXEMPLO (20):

SELECT *
FROM view_media_produtos;


-- EXEMPLO (21):

CREATE OR REPLACE VIEW view_media_produtos AS
  SELECT id_tipo_produto, AVG(preco) media_preco
  FROM tb_produtos
  WHERE preco < 12.00
  GROUP BY id_tipo_produto
  HAVING AVG(preco) > 11.00
  ORDER BY id_tipo_produto;
  
-- EXEMPLO (22):

ALTER VIEW view_produtos_baratos_2
DROP CONSTRAINT view_produtos_baratos_2_preco;

-- EXEMPLO (23):

DROP VIEW view_produtos_baratos_2;
